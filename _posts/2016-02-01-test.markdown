---
layout:     post
title:      "test"
subtitle:   "test"
date:       2016-02-01 12:00:00
author:     "hj"
header-img: "img/post-bg-re-vs-ng2.jpg"
header-mask: 0.3
tags:
    - 前端开发
    - JavaScript
    - 译文
---

## 目录
- 1.JavaScript事件代理
- 2.事件冒泡及捕获
- 3.jQuery中delegate函数
- 4.优点
- 5.在JavaScript编程中使用代理

在javasript中delegate这个词经常出现，看字面的意思，代理、委托。那么它究竟在什么样的情况下使用？它的原理又是什么？在各种框架中，也经常能看到delegate相关的接口。这些接口又有什么特殊的用法呢？这篇文章就主要介绍一下javascript delegate的用法和原理，以及Dojo，jQuery等框架中delegate的接口。

## JavaScript事件代理

首先介绍一下JavaScript的事件代理。事件代理在JS世界中一个非常有用也很有趣的功能。当我们需要对很多元素添加事件的时候，可以通过将事件添加到它们的父节点而将事件委托给父节点来触发处理函数。这主要得益于浏览器的事件冒泡机制，后面会详细介绍。下面我们具体举个例子来解释如何使用这个特性。这个例子主要取自David Walsh的相关文章（How JavaScript Event Delegation Works）。

假设有一个 UL 的父节点，包含了很多个 Li 的子节点：
```html
<ul id="parent-list">
  <li id="post-1">Item 1</li>
  <li id="post-2">Item 2</li>
  <li id="post-3">Item 3</li>
  <li id="post-4">Item 4</li>
  <li id="post-5">Item 5</li>
  <li id="post-6">Item 6</li>
</ul>
```